// This file has been generated by the GUI designer. Do not modify.

using System;

namespace PiggySync.GtkGui
{
    public partial class MainWindow
    {
        private global::Gtk.CheckButton autoSyncCheckBox;
        private global::Gtk.Button chooseFolderButton;
        private global::Gtk.Fixed fixed1;

        private global::Gtk.Button forceSyncButton;

        private global::Gtk.ProgressBar progressbar1;
        private global::Gtk.Entry rootSyncPath;

        protected virtual void Build()
        {
            Gui.Initialize(this);
            // Widget MainWindow
            this.Name = "MainWindow";
            this.Title = global::Mono.Unix.Catalog.GetString("PiGGY .... sync");
            this.Icon = global::Gdk.Pixbuf.LoadFromResource("PiggySync.GtkGui.PiggyLogo_64.png");
            this.WindowPosition = ((global::Gtk.WindowPosition) (4));
            this.Resizable = false;
            // Container child MainWindow.Gtk.Container+ContainerChild
            fixed1 = new global::Gtk.Fixed();
            fixed1.CanFocus = true;
            fixed1.Name = "fixed1";
            fixed1.HasWindow = false;
            // Container child fixed1.Gtk.Fixed+FixedChild
            forceSyncButton = new global::Gtk.Button();
            forceSyncButton.CanFocus = true;
            forceSyncButton.Name = "forceSyncButton";
            forceSyncButton.UseUnderline = true;
            forceSyncButton.Label = global::Mono.Unix.Catalog.GetString("GtkButton");
            fixed1.Add(forceSyncButton);
            var w1 = ((global::Gtk.Fixed.FixedChild) (fixed1[forceSyncButton]));
            w1.X = 13;
            w1.Y = 234;
            // Container child fixed1.Gtk.Fixed+FixedChild
            rootSyncPath = new global::Gtk.Entry();
            rootSyncPath.CanFocus = true;
            rootSyncPath.Name = "rootSyncPath";
            rootSyncPath.IsEditable = false;
            rootSyncPath.InvisibleChar = '●';
            fixed1.Add(rootSyncPath);
            var w2 = ((global::Gtk.Fixed.FixedChild) (fixed1[rootSyncPath]));
            w2.X = 10;
            w2.Y = 191;
            // Container child fixed1.Gtk.Fixed+FixedChild
            chooseFolderButton = new global::Gtk.Button();
            chooseFolderButton.CanFocus = true;
            chooseFolderButton.Name = "chooseFolderButton";
            chooseFolderButton.UseUnderline = true;
            chooseFolderButton.Label = global::Mono.Unix.Catalog.GetString("Choose");
            fixed1.Add(chooseFolderButton);
            var w3 = ((global::Gtk.Fixed.FixedChild) (fixed1[chooseFolderButton]));
            w3.X = 181;
            w3.Y = 187;
            // Container child fixed1.Gtk.Fixed+FixedChild
            autoSyncCheckBox = new global::Gtk.CheckButton();
            autoSyncCheckBox.CanFocus = true;
            autoSyncCheckBox.Name = "autoSyncCheckBox";
            autoSyncCheckBox.Label = global::Mono.Unix.Catalog.GetString("AutoSync");
            autoSyncCheckBox.DrawIndicator = true;
            autoSyncCheckBox.UseUnderline = true;
            fixed1.Add(autoSyncCheckBox);
            var w4 = ((global::Gtk.Fixed.FixedChild) (fixed1[autoSyncCheckBox]));
            w4.X = 149;
            w4.Y = 241;
            // Container child fixed1.Gtk.Fixed+FixedChild
            progressbar1 = new global::Gtk.ProgressBar();
            progressbar1.Name = "progressbar1";
            progressbar1.Text = "";
            progressbar1.PulseStep = 0;
            fixed1.Add(progressbar1);
            var w5 = ((global::Gtk.Fixed.FixedChild) (fixed1[progressbar1]));
            w5.X = 13;
            w5.Y = 152;
            this.Add(fixed1);
            if ((this.Child != null))
            {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 275;
            this.DefaultHeight = 276;
            this.Show();
            this.DeleteEvent += new global::Gtk.DeleteEventHandler(OnDeleteEvent);
            forceSyncButton.Clicked += new EventHandler(OnForceSyncButtonClicked);
            chooseFolderButton.Clicked += new EventHandler(OnChooseFolderButtonClicked);
            autoSyncCheckBox.Toggled += new EventHandler(OnAutoSyncCheckBoxToggled);
        }
    }
}